\input regression-test.tex\relax

\documentclass{article}

\directlua{
  local cbs = luatexbase.callback_descriptions'glyph_info'
  local desc = cbs[1]
  assert(desc == "luaotfload.glyphinfo" and nil == next(cbs, 1))
  local cb = luatexbase.remove_from_callback('glyph_info', desc)
  luatexbase.add_to_callback('glyph_info', function(n)
    return string.format('"\csstring\%s" \csstring\%04X \csstring\%+i:\csstring\%+i\string\t\csstring\%s', cb(n), n.char, n.xoffset, n.yoffset, font.getfont(n.font).specification.specification:gsub(";fallback=\csstring\%d+",";fallback=..."))
  end, 'luaotfload.glyphinfo -- testing variant')
  luatexbase.add_to_callback('glyph_not_found', function(id, char)
    texio.write_nl(string.format('Missing character: There is no \csstring\%s (U+\csstring\%04X) in font \csstring\%s!',
                   utf8.char(char), char, font.getfont(id).specification.specification:gsub(";fallback=\csstring\%d*",";fallback=...")))
  end, 'Harf glyph_not_found callback -- testing variant')
}

\directlua{luaotfload.add_fallback("myfallback", {
    "Noto Color Emoji:mode=harf","kpse:DejaVuSans.ttf:mode=harf","Siddhanta:mode=harf","kpse:NotoSansTibetan-Regular.ttf:mode=node"
  })}

\begin{document}
\showoutput
\font\fonts"Noto Serif:mode=harf,multiscript=auto,fallback=myfallback" \fonts
\START
᚛ᚓᚅᚐᚁᚐᚏᚏ᚜ རྐྱກົ້ฐูà́̂̃कि Text 😺 emoji 

\newpage
\directlua{
  texio.write_nl(status.node_mem_usage)
}
\end{document}
